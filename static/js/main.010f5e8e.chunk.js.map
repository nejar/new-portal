{"version":3,"sources":["logo.svg","components/common/CustomButton.js","components/Multiplier.js","components/Header.js","components/form/LoginPage.js","components/Content.js","components/home/MainHeader.js","components/home/MainContent.js","components/dashboard/UserDetail.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomButton","props","onClick","handleClick","btnText","Multiplier","x","y","Component","customStyle","container","color","fontSize","btn","LoginPage","state","username","password","handleSubmit","e","preventDefault","console","log","handleOnChange","setState","target","name","value","handleWithRefs","refs","className","style","type","placeholder","ref","onChange","this","borderRadius","MainHeader","to","id","exact","MainContent","myname","UserDetail","match","params","Dashboard","stye","backgroundColor","class","url","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.010f5e8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nfunction CustomButton(props) {\r\n  return <button onClick={props.handleClick}>{props.btnText}</button>;\r\n}\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\n\r\nfunction Multiplier(props) {\r\n  return props.x * props.y;\r\n}\r\n\r\nexport default Multiplier;\r\n","import React, { Component } from \"react\";\r\nimport CustomButton from \"./common/CustomButton\";\r\nimport Multiplier from \"./Multiplier\";\r\n\r\nexport class Header extends Component {\r\n  handleOnClick = () => {\r\n    console.log(\"i am in header\");\r\n  };\r\n\r\n  additionar = (x, y) => {\r\n    console.log(x + y);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Header\r\n        <CustomButton\r\n          btnText=\"Header Button\"\r\n          handleClick={this.handleOnClick}\r\n        />\r\n        <Multiplier x={5} y={5} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n// import \"../assets/Custom.css\";\r\nimport \"../assets/Custom.scss\";\r\n\r\nconst customStyle = {\r\n  container: { color: \"red\", fontSize: \"20px\" },\r\n  btn: { color: \"blue\" },\r\n};\r\n\r\nexport class LoginPage extends Component {\r\n  state = {\r\n    username: null,\r\n    password: null,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(e.target.username.value);\r\n    // if (e.target.username.value && e.target.password.value) {\r\n    //   this.setState({\r\n    //     username: e.target.username.value,\r\n    //     password: e.target.password.value,\r\n    //   });\r\n    // }\r\n    //console.log(this.state); give null bcoz not properly updated\r\n\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleWithRefs = () => {\r\n    console.log(this.refs.username.value);\r\n    this.setState({\r\n      username: this.refs.username.value,\r\n      password: this.refs.password.value,\r\n    });\r\n  };\r\n\r\n  // handleOnChangePassword = (e) => {\r\n  //   this.setState({\r\n  //     username: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <h2 style={customStyle.container}>Login Page</h2>\r\n        <br />\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"usename\"\r\n            ref=\"username\"\r\n            onChange={this.handleWithRefs}\r\n            style={{ borderRadius: \"10px\" }}\r\n          />\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            ref=\"password\"\r\n            onChange={this.handleWithRefs}\r\n            style={{ borderRadius: \"10px\" }}\r\n          />\r\n          <br />\r\n          <br />\r\n          <button className=\"login-btn\" onClick={this.handleSubmit}>\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from \"react\";\r\nimport LoginPage from \"./form/LoginPage\";\r\n\r\nexport class Content extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [\r\n        { name: \"Nejar\", age: 26, id: \"1\" },\r\n        { name: \"raja\", age: 26, id: \"2\" },\r\n        { name: \"praksh\", age: 26, id: \"3\" },\r\n        { name: \"suraj\", age: 26, id: \"4\" },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Age</th>\r\n              <th>Id</th>\r\n            </tr>\r\n\r\n            {this.state.data.map((user) => (\r\n              <tr>\r\n                <td>{user.name}</td>\r\n                <td>{user.age}</td>\r\n                <td>{user.id}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <LoginPage />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function MainHeader() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <NavLink className=\"navbar-brand\" to=\"#\">\r\n          Navbar\r\n        </NavLink>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <NavLink className=\"nav-link\" to=\"/\" exact>\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/dashboard\">\r\n                Dashboard\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction MainContent(props) {\r\n  return (\r\n    <div className=\"jumbotron\">Welcome {props.myname} to my new portal.</div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import React from \"react\";\r\n\r\nfunction UserDetail(props) {\r\n  console.log(props);\r\n  return <div>My use id is : {props.match.params.id}</div>;\r\n}\r\n\r\nexport default UserDetail;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Switch, Route } from \"react-router-dom\";\r\nimport UserDetail from \"./UserDetail\";\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n\r\n    const { match } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\" stye={{ backgroundColor: \"#f4f4f4\" }}>\r\n        <div className=\"col-3\">\r\n          <nav class=\"nav flex-column\">\r\n            <NavLink className=\"nav-link active\" to={`${match.url}`}>\r\n              Home\r\n            </NavLink>\r\n            <NavLink className=\"nav-link active\" to={`${match.url}/users`}>\r\n              Users\r\n            </NavLink>\r\n            <NavLink className=\"nav-link active\" to={`${match.url}/news`}>\r\n              News\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.path}`} exact>\r\n              Hello Dashboard\r\n            </Route>\r\n            <Route path={`${match.path}/users`} exact>\r\n              Hello users\r\n            </Route>\r\n            <Route path={`${match.path}/users/:id`} component={UserDetail} />\r\n            <Route path={`${match.path}/news`}>Hello news</Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport CustomButton from \"./components/common/CustomButton\";\nimport Content from \"./components/Content\";\nimport MainHeader from \"./components/home/MainHeader\";\nimport MainContent from \"./components/home/MainContent\";\nimport LoginPage from \"./components/form/LoginPage\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nconst buttonClickHandle = () => {\n  console.log(\"I am inside app.js file\");\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Header /> */}\n      {/* <CustomButton\n        handleClick={buttonClickHandle}\n        btnText=\"Button form aap file\"\n      /> */}\n      {/* <Content /> */}\n\n      <Router>\n        <MainHeader />\n        <Route\n          path=\"/\"\n          component={(props) => <MainContent myname=\"nejar\" {...props} />}\n          exact\n        />\n        <Route path=\"/login\" component={LoginPage} />\n        <Route\n          path=\"/dashboard\"\n          component={(props) => <Dashboard {...props} />}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}